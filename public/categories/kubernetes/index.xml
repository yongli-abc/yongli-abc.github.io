<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Yong Li 李泳</title>
    <link>https://yongli-abc.github.io/categories/kubernetes/</link>
    <description>Recent content in Kubernetes on Yong Li 李泳</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>{year}</copyright>
    <lastBuildDate>Mon, 22 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yongli-abc.github.io/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Kubernetes Watch Mechanism, HTTP Long Polling, and Chunked Transfer Encoding</title>
      <link>https://yongli-abc.github.io/posts/understanding_kubernetes_watch_mechanism_http_long_polling_and_chunked_transfer_encoding/</link>
      <pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yongli-abc.github.io/posts/understanding_kubernetes_watch_mechanism_http_long_polling_and_chunked_transfer_encoding/</guid>
      <description>Kubernetes (K8s) is an open-source platform for managing containerized workloads and services. One of the core concepts of Kubernetes is the &amp;ldquo;watch&amp;rdquo; mechanism used by its controllers.</description>
    </item>
    
    <item>
      <title>Solving the &#39;exec /bin/sh: exec format error&#39; with Multi-Architecture Docker Builds</title>
      <link>https://yongli-abc.github.io/posts/solving_the_exec_binsh_exec_format_error_with_multi_architecture_docker_builds/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yongli-abc.github.io/posts/solving_the_exec_binsh_exec_format_error_with_multi_architecture_docker_builds/</guid>
      <description>Introduction In the world of containers and microservices, Docker is a popular tool for packaging applications along with their dependencies.</description>
    </item>
    
    <item>
      <title>Kubernetes: Understanding Jobs and CronJobs</title>
      <link>https://yongli-abc.github.io/posts/kubernetes-understanding-jobs-and-cronjobs/</link>
      <pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yongli-abc.github.io/posts/kubernetes-understanding-jobs-and-cronjobs/</guid>
      <description>In Kubernetes, we often have pods that are meant to run indefinitely. However, there are scenarios where we need to run a specific task and exit, like a database migration.</description>
    </item>
    
    <item>
      <title>Kubernetes: Understanding ConfigMaps and Secrets</title>
      <link>https://yongli-abc.github.io/posts/kubernetes-understanding-configmaps-and-secrets/</link>
      <pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yongli-abc.github.io/posts/kubernetes-understanding-configmaps-and-secrets/</guid>
      <description>Today we dive deeper into the world of Kubernetes, specifically focusing on two essential resources: ConfigMaps and Secrets.</description>
    </item>
    
    <item>
      <title>Kubernetes: Understanding Pods, Deployments, and Probes</title>
      <link>https://yongli-abc.github.io/posts/kubernetes-understanding-pods-deployments/</link>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yongli-abc.github.io/posts/kubernetes-understanding-pods-deployments/</guid>
      <description>In this blog post, we&amp;rsquo;ll explore some of the key concepts in Kubernetes, such as Pods, Deployments, and Probes.</description>
    </item>
    
    <item>
      <title>Kubernetes: Understanding Services and Ingress</title>
      <link>https://yongli-abc.github.io/posts/kubernetes-understanding-services-and-ingress/</link>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yongli-abc.github.io/posts/kubernetes-understanding-services-and-ingress/</guid>
      <description>Introduction to Kubernetes Services In Kubernetes, Pods are ephemeral and can be terminated and created dynamically.</description>
    </item>
    
  </channel>
</rss>
